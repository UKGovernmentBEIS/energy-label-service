#Freemarker
spring.freemarker.settings.output_format=HTMLOutputFormat
spring.freemarker.settings.template_exception_handler=rethrow
spring.freemarker.suffix=.ftl

app.show_start_page=${SHOW_START_PAGE:false}
app.home_page_url=${HOME_PAGE_URL:/}
app.enable_google_analytics=${ENABLE_GOOGLE_ANALYTICS:false}
# Ensure measurement ID matches in cookieControl.js
app.analytics_measurement_id=${GOOGLE_ANALYTICS_MEASUREMENT_ID:not-set}
app.analytics_api_secret=${ANALYTICS_API_SECRET:not-set}
app.analytics_connection_timeout_ms=${ANALYTICS_CONN_TIMEOUT_MS:1000}
app.valid_referer_domain=${VALID_REFERER_DOMAIN:http://localhost}

api.v1.base_path=/api/v1
api.v1.rate-limit.capacity=${RATE_LIMIT_CAPACITY:20}
api.v1.rate-limit.time_value=${RATE_LIMIT_TIME_VALUE:1}
api.v1.rate-limit.time_unit=${RATE_LIMIT_TIME_UNIT:minutes}

springdoc.pathsToMatch=${api.v1.base_path}/**

# This is excluded from pathsToMatch automatically
springdoc.api-docs.path=${api.v1.base_path}/energy-labels-openapi.json
springdoc.swagger-ui.enabled=${ENABLE_SWAGGER_UI:false}
# For sorting endpoints alphabetically
springdoc.swagger-ui.operationsSorter=alpha
# For sorting tags alphabetically
springdoc.swagger-ui.tagsSorter=alpha

spring.cache.jcache.provider=com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
spring.cache.cache-names=buckets
spring.cache.caffeine.spec=maximumSize=10000,expireAfterAccess=60s

bucket4j.enabled=${ENABLE_RATE_LIMITING:false}
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].filter-order=1
bucket4j.filters[0].url=/api/v1/.*
bucket4j.filters[0].http-response-body={ "status" : 429, "error": "Too many requests", "message" : "You have exhausted your API request quota" }
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=${api.v1.rate-limit.capacity}
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=${api.v1.rate-limit.time_value}
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=${api.v1.rate-limit.time_unit}
bucket4j.filters[0].rate-limits[0].expression=@bucket4JRequestService.getRequestIpAddress()

logging.pattern.console=${LOG_PATTERN:%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n}

spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/assets/**
